generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String
  mobile        String         @unique
  dob           DateTime?
  sex           String?
  verified      Boolean
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  memberId      String?
  tickets       Appointments[]
  Member        Member?        @relation(fields: [memberId], references: [id])
  BusinessUsers BusinessUser[] @relation("BusinessUserToUser")

  @@index([mobile, name])
}

model Appointments {
  id             String       @id @default(uuid())
  userId         String
  businessUserId String
  status         String
  date           String
  ticketId       Int          @unique @default(autoincrement())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  slot           Json
  memberId       String
  BusinessUser   BusinessUser @relation(fields: [businessUserId], references: [id])
  Member         Member       @relation(fields: [memberId], references: [id])
  User           User         @relation(fields: [userId], references: [id])
}

model BusinessUser {
  id           String         @id @default(uuid())
  name         String
  businessName String
  mobile       String         @unique
  email        String?        @unique
  password     String
  slug         String         @unique
  about        String?
  address      String?
  verified     Boolean
  approved     Boolean
  slots        Json?
  weekdays     Json?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  tickets      Appointments[]
  members      Member[]
  customers    User[]         @relation("BusinessUserToUser")

  @@index([mobile, name])
}

model Member {
  id             String         @id @default(uuid())
  name           String
  mobile         String         @unique
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  businessUserId String?
  password       String
  tickets        Appointments[]
  BusinessUser   BusinessUser?  @relation(fields: [businessUserId], references: [id])
  customers      User[]

  @@index([mobile, name])
}
